name: GKI Kernel Build on Self-Hosted Runner
description: GKI Kernel Build on Self-Hosted Runner
permissions:
  contents: write
  actions: write
inputs:
  KERNEL_NAME:
    required: true
    type: string
    description: Kernel Name
  NOSKIP:
    required: true
    type: boolean
    description: Don't Skip
  KERNEL_REPO:
    required: true
    type: string
    description: Kernel Repo
  KERNEL_BRANCH:
    required: true
    type: string
    description: Kernel Branch
  VERSION:
    required: true
    type: string
    description: Version
  COMPILER_VER:
    required: true
    type: string
    description: Compiler Version
  BUILD_TYPE:
    required: true
    type: string
    default: DEBUG
    description: Build Type
  DEBUG:
    required: false
    default: false
    type: boolean
  FullLTO:
    required: true
    default: false
    type: boolean
  CCACHE_TYPE:
    required: true
    type: string
    default: ccache
    description: ccache Type
  UPDATE_CCACHE:
    required: true
    default: false
    type: boolean
  UPLOAD_PACKAGE:
    required: true
    default: true
    type: boolean
  CI_TOKEN:
    required: true
    type: string
  CHAT_ID:
    required: true
    type: string
  BOT_TOKEN:
    required: true
    type: string
runs:
  using: composite
  steps:
    - name: Checkout Kernel Code
      uses: actions/checkout@main
      with:
        token: ${{inputs.CI_TOKEN}}
        repository: ${{inputs.KERNEL_REPO}}
        ref: ${{inputs.KERNEL_BRANCH}}
        path: kernel_common
        fetch-depth: 1
    - name: Download Pandora Clang
      uses: robinraju/release-downloader@main
      with:
        repository: PandoraMTK/pandora-clang
        tag: ${{inputs.COMPILER_VER}}
        fileName: pandora-clang.tar.gz
        extract: true
        tarBall: false
        zipBall: false
        token: ${{inputs.CI_TOKEN}}
    - name: Download Pahole
      uses: robinraju/release-downloader@main
      with:
        repository: PandoraMTK/pandora-clang
        tag: pahole-latest
        fileName: pahole
        extract: false
        tarBall: false
        zipBall: false
        token: ${{inputs.CI_TOKEN}}
    - name: Setup ccache options
      id: setup_ccache_key
      shell: bash
      run: |
        FULLLTO=""
        if [ "${{inputs.FullLTO}}" == true ]; then
          FULLLTO="-full_lto"
        fi

        CCACHE_KEY="gki$FULLLTO-${{inputs.KERNEL_BRANCH}}-${{inputs.COMPILER_VER}}-shbuild"

        echo "ccache_key_id=$CCACHE_KEY" >> $GITHUB_OUTPUT
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{steps.setup_ccache_key.outputs.ccache_key_id}}
        max-size: 3G
        save: ${{inputs.UPDATE_CCACHE}}
        restore: ${{inputs.UPDATE_CCACHE  == false}}
        append-timestamp: true
        variant: ${{inputs.CCACHE_TYPE}}
        evict-old-files: job
    - name: Start Build
      id: kbuild
      shell: bash
      run: |
        set -euo pipefail

        mv $GITHUB_WORKSPACE/pahole $GITHUB_WORKSPACE/pandora-clang/bin/pahole
        chmod +x $GITHUB_WORKSPACE/pandora-clang/bin/pahole
        cd kernel_common
        bash $GITHUB_WORKSPACE/build_kernel.sh \
          "$GITHUB_WORKSPACE/pandora-clang" "${{inputs.KERNEL_NAME}}" "${{inputs.VERSION}}" \
          "${{inputs.BUILD_TYPE}}" "${{github.run_id}}" "${{inputs.FullLTO}}" "${{inputs.CCACHE_TYPE}}"

        ZIPNAME="$(cat .output)"
        mv -f "$ZIPNAME.zip" "$GITHUB_WORKSPACE/$ZIPNAME.zip"
        echo "archivename=$ZIPNAME" >>$GITHUB_OUTPUT
    - name: Upload to telegram
      if: ${{inputs.UPLOAD_PACKAGE == true}}
      shell: bash
      env:
        CHAT_ID: ${{inputs.CHAT_ID}}
        BOT_TOKEN: ${{inputs.BOT_TOKEN}}
      run: |
        proxychains -q python3 $GITHUB_WORKSPACE/tgbot.py $GITHUB_WORKSPACE/${{ steps.kbuild.outputs.archivename }}.zip
