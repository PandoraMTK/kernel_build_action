name: Build OKI Kernels
run-name: Build OKI Kernels
on:
  workflow_dispatch:
    inputs:
      VERSION:
        required: true
        type: string
        description: Version
      BUILD_TYPE:
        required: true
        type: choice
        description: Build Type
        options:
          - BETA
          - REL
      BUILD_5_10_5_15_6_1:
        required: false
        type: boolean
        default: true
        description: Build 5.10 & 5.15 & 6.1
      BUILD_6_6:
        required: false
        type: boolean
        default: true
        description: Build 6.6
      BUILD_6_12:
        required: false
        type: boolean
        default: false
        description: Build 6.12
      USE_SELFHOST:
        required: false
        type: boolean
        default: true
        description: Use self-host runner
      FullLTO:
        required: false
        default: false
        type: boolean
        description: Enable LTO
      DEBUG:
        required: false
        default: false
        type: boolean
        description: Enable actions debug
      UPDATE_CCACHE:
        required: false
        default: false
        type: boolean
        description: Update ccache cache
      UPLOAD_PACKAGE:
        required: false
        default: true
        type: boolean
        description: Upload package
jobs:
  build-kernel:
    name: Build OKI Kernels
    runs-on: ubuntu-latest
    if: ${{!inputs.USE_SELFHOST}}
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      DEBIAN_FRONTEND: "noninteractive"
    strategy:
      fail-fast: false
      matrix: &build_oki_matrix
        include:
          - KERNEL_NAME: OanPora
            IF: ${{inputs.BUILD_5_10_5_15_6_1}}
            KERNEL_REPO: PandoraMTK/android_kernel_gki_5.10
            KERNEL_BRANCH: android12-5.10-o
            COMPILER_VER: r416183b
            CCACHE_TYPE: ccache
          - KERNEL_NAME: OuPi
            IF: ${{inputs.BUILD_5_10_5_15_6_1}}
            KERNEL_REPO: PandoraMTK/android_kernel_gki_5.15
            KERNEL_BRANCH: android13-5.15-o
            COMPILER_VER: r450784e
            CCACHE_TYPE: ccache
          - KERNEL_NAME: OngelPeats
            IF: ${{inputs.BUILD_5_10_5_15_6_1}}
            KERNEL_REPO: PandoraMTK/android_kernel_gki_6.1
            KERNEL_BRANCH: android14-6.1-o
            COMPILER_VER: r484474c
            CCACHE_TYPE: ccache
          - KERNEL_NAME: HummingBird
            IF: ${{inputs.BUILD_6_6}}
            KERNEL_REPO: PandoraMTK/android_kernel_gki_6.6
            KERNEL_BRANCH: android15-6.6-o
            COMPILER_VER: r522817
            CCACHE_TYPE: ccache
          - KERNEL_NAME: STUB
            IF: ${{inputs.BUILD_6_12}}
            KERNEL_REPO: PandoraMTK/android_kernel_gki_6.12
            KERNEL_BRANCH: android16-6.12-o
            COMPILER_VER: r536225
            CCACHE_TYPE: sccache
    steps:
      - name: Clean Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 8192
          swap-size-mb: 32768
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
      - name: Install Toolchain
        run: |
          sudo -E apt-get update
          sudo -E apt-get install --no-install-recommends -y \
            lsb-release linux-modules-extra-"$(uname -r)" ccache sccache pahole \
            git automake flex bison build-essential zlib1g-dev make rustup \
            libelf-dev libssl-dev openssl bc device-tree-compiler gzip libdw-dev \
            python3-telethon python-is-python3 zip unzip zstd libzstd-dev pigz \
            libncurses-dev asciidoc dos2unix lz4 fakeroot python3 python3-pip \
            gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf \
            libc6-dev-armel-cross libc6-dev-armhf-cross libc6-dev-arm64-cross
          sudo -E apt-get clean
          df -h
      - name: Optimize Memory Management
        run: |
          sudo -E sysctl vm.swappiness=1
          sudo -E sysctl vm.min_free_kbytes=32768
          sudo -E sysctl vm.watermark_scale_factor=100
          sudo -E sysctl vm.watermark_boost_factor=15000
          sudo -E sysctl vm.overcommit_memory=1
          sudo -E sysctl vm.page-cluster=0
          sudo -E modprobe zram
          echo "0" | sudo -E tee /sys/class/block/zram0/mem_limit
          echo "zstd" | sudo -E tee /sys/class/block/zram0/comp_algorithm
          echo "$(awk 'NR==1{print $2*1000}' </proc/meminfo)" | sudo -E tee /sys/class/block/zram0/disksize
          sudo -E mkswap /dev/zram0
          sudo -E swapon -p 100 /dev/zram0
          echo "Y" | sudo -E tee /sys/kernel/mm/lru_gen/enabled
          echo "1000" | sudo -E tee /sys/kernel/mm/lru_gen/min_ttl_ms
          echo "1" | sudo -E tee /sys/kernel/mm/swap/vma_ra_enabled
      - name: Setup TimeZone
        run: |
          sudo -E rm -rf /etc/localtime
          sudo -E ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
      - name: Checkout Actions
        uses: actions/checkout@main
        with:
          ref: ${{github.ref_name}}
          fetch-depth: 1
      - name: Build OKI Kernel ${{matrix.KERNEL_NAME}}
        uses: ./.github/actions/build_gki
        if: ${{matrix.IF}}
        with:
          KERNEL_NAME: ${{matrix.KERNEL_NAME}}
          NOSKIP: ${{matrix.IF}}
          KERNEL_REPO: ${{matrix.KERNEL_REPO}}
          KERNEL_BRANCH: ${{matrix.KERNEL_BRANCH}}
          VERSION: ${{ inputs.VERSION }}
          BUILD_TYPE: ${{inputs.BUILD_TYPE}}
          FullLTO: ${{inputs.FullLTO}}
          DEBUG: ${{inputs.DEBUG}}
          UPDATE_CCACHE: ${{inputs.UPDATE_CCACHE}}
          COMPILER_VER: ${{matrix.COMPILER_VER}}
          CCACHE_TYPE: ${{matrix.CCACHE_TYPE}}
          UPLOAD_PACKAGE: ${{inputs.UPLOAD_PACKAGE}}
  sh-build-kernel:
    name: Build OKI Kernels on Self Hosted Runner
    runs-on: self-hosted
    if: ${{inputs.USE_SELFHOST}}
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      DEBIAN_FRONTEND: "noninteractive"
    strategy:
      fail-fast: false
      matrix: *build_oki_matrix
    steps:
      - name: Checkout Actions
        uses: actions/checkout@main
        with:
          ref: ${{github.ref_name}}
          fetch-depth: 1
      - name: Build OKI Kernel ${{matrix.KERNEL_NAME}}
        uses: ./.github/actions/build_gki_sh
        if: ${{matrix.IF}}
        with:
          KERNEL_NAME: ${{matrix.KERNEL_NAME}}
          NOSKIP: ${{matrix.IF}}
          KERNEL_REPO: ${{matrix.KERNEL_REPO}}
          KERNEL_BRANCH: ${{matrix.KERNEL_BRANCH}}
          VERSION: ${{ inputs.VERSION }}
          BUILD_TYPE: ${{inputs.BUILD_TYPE}}
          FullLTO: ${{inputs.FullLTO}}
          DEBUG: ${{inputs.DEBUG}}
          UPDATE_CCACHE: ${{inputs.UPDATE_CCACHE}}
          COMPILER_VER: ${{matrix.COMPILER_VER}}
          CCACHE_TYPE: ${{matrix.CCACHE_TYPE}}
          UPLOAD_PACKAGE: ${{inputs.UPLOAD_PACKAGE}}
          CI_TOKEN: ${{secrets.CI_TOKEN}}
          CHAT_ID: ${{secrets.CHAT_ID}}
          BOT_TOKEN: ${{secrets.BOT_TOKEN}}
